#!/usr/bin/env python3
#

import subprocess
import json
import sys

def getinfo(cmd):
    result = subprocess.run(cmd.split(" "), capture_output=True)
    if (result.returncode != 0):
        print(f'Unable to get processes {result.stderr.decode("utf-8") }')
    
    return result.stdout.decode("utf-8")

def dataset():
    data = [] 
    result = getinfo("/sbin/zfs list -p -r -H -o name,available,usedbydataset,usedbysnapshots,usedbyrefreservation,refcompressratio,refreservation,refquota")
    for line in result.splitlines():
       (name, avail, usedds, usedsnap, usedbyrefreservation, compression, reservation, quota) = line.split()
       if (quota == '-'):
          quota = 0
       data.append({ "name": name, "available": int(avail), "usedds": int(usedds), "usedsnapshot": int(usedsnap), "usedreservation": int(usedbyrefreservation), "compression": float(compression), "reservation": int(reservation), "quota": int(quota) })
    
    print(json.dumps({"data": data}))

def pool():
    data = [] 
    result = getinfo("/sbin/zpool list -p -H -o name,size,allocated,free,fragmentation,health")
    for line in result.splitlines():
       (name, size, used, free, fragmentation, health) = line.split()
       data.append({ "name": name, "size": int(size), "used": int(used), "free": int(free), "fragmentation": int(fragmentation), "health": health })
    
    print(json.dumps({"data": data}))

def usage():
    print("zabbix-zfs <pool|ds>")
    sys.exit()

def main():
    if len(sys.argv) != 2:
        usage()
    if sys.argv[1] == "pool":
        pool()
    elif sys.argv[1] == "ds":
        dataset()

if __name__ == "__main__":
    main()
